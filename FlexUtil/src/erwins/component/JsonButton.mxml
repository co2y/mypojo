<?xml version="1.0" encoding="utf-8"?>
<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml"
    creationComplete="init()">

	<mx:Script>
		<![CDATA[
			import erwins.util.UILib.TooltipUtil;
			import mx.managers.ToolTipManager;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.collections.ArrayCollection;
			import mx.core.Container;
			import mx.containers.Tile;
			
			private var _json:Object;
			private var _labelName:String;
			private var _tooltipName:String;
			
			/** Repeater사용시 적용되는 토글 버튼이다. */
			private function init(): void {
				this.toggle = true;
				if(_json==null) Alert.show('plz inser json!');
				if(_labelName) this.label = _json[_labelName];
				if(_tooltipName) TooltipUtil.addStaticTooltip(this,_json[_labelName],_json[_tooltipName]);
			}			
			
			/** 1. 이것이 최초에 먼저 세팅되어야 한다. */
			public function set json(json:Object):void{
				this._json = json;
			}
			public function get json():Object{
				return _json;
			}
			
			/** 2. 이것이 두번째로 세팅되어야 한다. */
			public function set labelName(labelName:String):void{
				_labelName = labelName;
			}
			
			/** 3. 해당 key로 툴팁을 생성한다. */
			public function set tooltipName(tooltipName:String):void{
				this._tooltipName = tooltipName;
			}
			
			
			/** jsonArray로 각 버튼을  toggle시킨다. 최초 1회만 작동함으로 초기화가 필요 없다. */
			public static function toggle(base:Container,jsonArray:Object):void{
				var children:Array = base.getChildren();
				for each(var comp:UIComponent in children){
					if(comp is JsonButton){
						var jsonButton:JsonButton = comp as JsonButton;
						for each(var json:Object in jsonArray){
							if(jsonButton.json.id == json.id) jsonButton.selected = true;
						} 
					}
				}
			}
			
			/** toggled 된 버튼들의 json들을 리턴한다. */
			public static function toggledArray(base:Container):ArrayCollection{
				var temp:ArrayCollection = new ArrayCollection();
				for each(var comp:UIComponent in base.getChildren()){
					if(comp is JsonButton){
						var jsonButton:JsonButton = comp as JsonButton;
						if(jsonButton.selected) temp.addItem(jsonButton._json);
					}
				}
				return temp;
			}
			
			/** toggled 된 버튼들의 json id값을 Array로 리턴한다. */
			public static function toggledArrayForHttp(base:Container):Array{
				var toggledArray:ArrayCollection = toggledArray(base);
				var result:Array = new Array();
				for each(var json:Object in toggledArray){
						result.push(json.id);
				}
				return result;
			}
			
		]]>
	</mx:Script>
</mx:Button>